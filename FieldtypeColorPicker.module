<?php

/**
 * ProcessWire ColorPicker Fieldtype
 *
 * created by Philipp "Soma" Urlich
 * ColorPicker jQuery Plugin by http://www.eyecon.ro/colorpicker/
 *
 * Licensed under LGPL3 http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 */

class FieldtypeColorPicker extends Fieldtype {


	public static function getModuleInfo() {
		return array(
			'title' => 'ColorPicker',
			'version' => 104,
			'summary' => 'Fieldtype that stores a HEX color. Color can be picked using a jQuery ColorPicker Plugin by http://www.eyecon.ro/colorpicker/',
			'href' => 'http://processwire.com/talk/topic/865-module-colorpicker/page__gopid__7340#entry7340',
			'installs' => 'InputfieldColorPicker'
			);
	}

	/**
	 * Return the default or if not set a blank value
	 *
	 */
	public function getBlankValue(Page $page, Field $field) {
		return $field->default ? $field->default : '';
	}

	/**
	 * Return the associated InputfieldColorPicker
	 *
	 */
	public function getInputfield(Page $page, Field $field) {
		$inputField = $this->modules->get('InputfieldColorPicker');
		return $inputField;
	}

	/**
	 * sanitize the HEX value and cut off characters if longer than 6
	 */
	public function sanitizeValue(Page $page, Field $field, $value) {
		return strtoupper(substr($value, 0, 6));
	}

	/**
	 * Return the database schema in specified format
	 *
	 */
	public function getDatabaseSchema(Field $field) {
		$schema = parent::getDatabaseSchema($field);
		$schema['data'] = 'CHAR(6) NOT NULL'; // i.e. FFFFFF or 333333 (hex color codes)
		return $schema;
	}

	/**
	 * set the config option fields for this field
	 *
	 */
	public function ___getConfigInputfields(Field $field) {
		$inputfields = parent::___getConfigInputfields($field);
		$f = $this->modules->get("InputfieldText");
		$f->attr('name', 'default');
		$f->attr('size', 6);
		$f->attr('value', $field->default);
		$f->label = $this->_('Default Value');
		$f->description = $this->_('Set the default HEX value for the field. For example "EAEAEA". To have a blank value leave this field empty.');
		$inputfields->append($f);
		return $inputfields;
	}

}
